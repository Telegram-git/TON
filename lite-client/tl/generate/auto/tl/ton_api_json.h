#pragma once

#include "auto/tl/ton_api.h"

#include "td/utils/JsonBuilder.h"
#include "td/utils/Status.h"

namespace ton {
namespace ton_api{
  using namespace td;
Result<int32> tl_constructor_from_string(ton_api::Hashable *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::TestObject *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::adnl_Address *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::adnl_Message *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::adnl_PacketHeader *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::adnl_fileTransfer_Message *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::adnl_id_Full *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::adnl_id_Pk *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::catchain_BlockResult *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::catchain_Difference *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::catchain_block_inner_Data *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::dht_UpdateRule *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::dht_ValueResult *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::dht_config_Local *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::fer_Type *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::overlay_Broadcast *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::overlay_config_Local *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::rldp_Message *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::rldp_MessagePart *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::test0_MasterchainBlockExtra *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::test0_MasterchainStateExtra *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::tonNode_BlockDescription *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::tonNode_Broadcast *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::tonNode_Prepared *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::tonNode_PreparedProof *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::tonNode_PreparedState *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::validatorSession_Message *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::validatorSession_round_Message *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::Object *object, const std::string &str);
Result<int32> tl_constructor_from_string(ton_api::Function *object, const std::string &str);
Status from_json(ton_api::hashable_bool &to, JsonObject &from);
Status from_json(ton_api::hashable_int32 &to, JsonObject &from);
Status from_json(ton_api::hashable_int64 &to, JsonObject &from);
Status from_json(ton_api::hashable_int256 &to, JsonObject &from);
Status from_json(ton_api::hashable_bytes &to, JsonObject &from);
Status from_json(ton_api::hashable_pair &to, JsonObject &from);
Status from_json(ton_api::hashable_vector &to, JsonObject &from);
Status from_json(ton_api::hashable_validatorSessionOldRound &to, JsonObject &from);
Status from_json(ton_api::hashable_validatorSessionRoundAttempt &to, JsonObject &from);
Status from_json(ton_api::hashable_validatorSessionRound &to, JsonObject &from);
Status from_json(ton_api::hashable_blockSignature &to, JsonObject &from);
Status from_json(ton_api::hashable_sentBlock &to, JsonObject &from);
Status from_json(ton_api::hashable_sentBlockEmpty &to, JsonObject &from);
Status from_json(ton_api::hashable_vote &to, JsonObject &from);
Status from_json(ton_api::hashable_blockCandidate &to, JsonObject &from);
Status from_json(ton_api::hashable_blockCandidateAttempt &to, JsonObject &from);
Status from_json(ton_api::hashable_cntVector &to, JsonObject &from);
Status from_json(ton_api::hashable_cntSortedVector &to, JsonObject &from);
Status from_json(ton_api::hashable_validatorSession &to, JsonObject &from);
Status from_json(ton_api::testObject &to, JsonObject &from);
Status from_json(ton_api::testString &to, JsonObject &from);
Status from_json(ton_api::testInt &to, JsonObject &from);
Status from_json(ton_api::testVectorBytes &to, JsonObject &from);
Status from_json(ton_api::adnl_address_udp &to, JsonObject &from);
Status from_json(ton_api::adnl_address_udp6 &to, JsonObject &from);
Status from_json(ton_api::adnl_address_tcp &to, JsonObject &from);
Status from_json(ton_api::adnl_address_tcp6 &to, JsonObject &from);
Status from_json(ton_api::adnl_address_tunnel &to, JsonObject &from);
Status from_json(ton_api::adnl_addressList &to, JsonObject &from);
Status from_json(ton_api::adnl_message_packet &to, JsonObject &from);
Status from_json(ton_api::adnl_message_createChannel &to, JsonObject &from);
Status from_json(ton_api::adnl_message_confirmChannel &to, JsonObject &from);
Status from_json(ton_api::adnl_message_custom &to, JsonObject &from);
Status from_json(ton_api::adnl_message_nop &to, JsonObject &from);
Status from_json(ton_api::adnl_message_reinit &to, JsonObject &from);
Status from_json(ton_api::adnl_message_query &to, JsonObject &from);
Status from_json(ton_api::adnl_message_answer &to, JsonObject &from);
Status from_json(ton_api::adnl_node &to, JsonObject &from);
Status from_json(ton_api::adnl_nodes &to, JsonObject &from);
Status from_json(ton_api::adnl_packetContents &to, JsonObject &from);
Status from_json(ton_api::adnl_packetHeader_secp256k1 &to, JsonObject &from);
Status from_json(ton_api::adnl_packetHeader_unenc &to, JsonObject &from);
Status from_json(ton_api::adnl_packetHeader_channel &to, JsonObject &from);
Status from_json(ton_api::adnl_config_global &to, JsonObject &from);
Status from_json(ton_api::adnl_fileTransfer_request &to, JsonObject &from);
Status from_json(ton_api::adnl_fileTransfer_ack &to, JsonObject &from);
Status from_json(ton_api::adnl_fileTransfer_finish &to, JsonObject &from);
Status from_json(ton_api::adnl_fileTransfer_data &to, JsonObject &from);
Status from_json(ton_api::adnl_id_ed25519 &to, JsonObject &from);
Status from_json(ton_api::adnl_id_aes &to, JsonObject &from);
Status from_json(ton_api::adnl_id_unenc &to, JsonObject &from);
Status from_json(ton_api::adnl_id_overlay &to, JsonObject &from);
Status from_json(ton_api::adnl_id_pk_unenc &to, JsonObject &from);
Status from_json(ton_api::adnl_id_pk_ed25519 &to, JsonObject &from);
Status from_json(ton_api::adnl_id_pk_aes &to, JsonObject &from);
Status from_json(ton_api::adnl_id_pk_overlay &to, JsonObject &from);
Status from_json(ton_api::adnl_id_short &to, JsonObject &from);
Status from_json(ton_api::catchain_block &to, JsonObject &from);
Status from_json(ton_api::catchain_blockNotFound &to, JsonObject &from);
Status from_json(ton_api::catchain_blockResult &to, JsonObject &from);
Status from_json(ton_api::catchain_blocks &to, JsonObject &from);
Status from_json(ton_api::catchain_difference &to, JsonObject &from);
Status from_json(ton_api::catchain_differenceFork &to, JsonObject &from);
Status from_json(ton_api::catchain_firstblock &to, JsonObject &from);
Status from_json(ton_api::catchain_sent &to, JsonObject &from);
Status from_json(ton_api::catchain_blockUpdate &to, JsonObject &from);
Status from_json(ton_api::catchain_block_data &to, JsonObject &from);
Status from_json(ton_api::catchain_block_dep &to, JsonObject &from);
Status from_json(ton_api::catchain_block_id &to, JsonObject &from);
Status from_json(ton_api::catchain_block_data_badBlock &to, JsonObject &from);
Status from_json(ton_api::catchain_block_data_fork &to, JsonObject &from);
Status from_json(ton_api::catchain_block_data_nop &to, JsonObject &from);
Status from_json(ton_api::catchain_block_data_vector &to, JsonObject &from);
Status from_json(ton_api::catchain_config_global &to, JsonObject &from);
Status from_json(ton_api::catchain_config_local &to, JsonObject &from);
Status from_json(ton_api::config_global &to, JsonObject &from);
Status from_json(ton_api::config_local &to, JsonObject &from);
Status from_json(ton_api::dht_key &to, JsonObject &from);
Status from_json(ton_api::dht_keyDescription &to, JsonObject &from);
Status from_json(ton_api::dht_message &to, JsonObject &from);
Status from_json(ton_api::dht_node &to, JsonObject &from);
Status from_json(ton_api::dht_nodes &to, JsonObject &from);
Status from_json(ton_api::dht_pong &to, JsonObject &from);
Status from_json(ton_api::dht_stored &to, JsonObject &from);
Status from_json(ton_api::dht_updateRule_signature &to, JsonObject &from);
Status from_json(ton_api::dht_updateRule_anybody &to, JsonObject &from);
Status from_json(ton_api::dht_updateRule_nodes &to, JsonObject &from);
Status from_json(ton_api::dht_updateRule_overlayNodes &to, JsonObject &from);
Status from_json(ton_api::dht_value &to, JsonObject &from);
Status from_json(ton_api::dht_valueNotFound &to, JsonObject &from);
Status from_json(ton_api::dht_valueFound &to, JsonObject &from);
Status from_json(ton_api::dht_config_global &to, JsonObject &from);
Status from_json(ton_api::dht_config_local &to, JsonObject &from);
Status from_json(ton_api::dht_config_random_local &to, JsonObject &from);
Status from_json(ton_api::dummydb_block &to, JsonObject &from);
Status from_json(ton_api::dummydb_gcValidatorSessionList &to, JsonObject &from);
Status from_json(ton_api::dummyworkchain0_config_global &to, JsonObject &from);
Status from_json(ton_api::dummyworkchain0_config_local &to, JsonObject &from);
Status from_json(ton_api::fer_raptorQ &to, JsonObject &from);
Status from_json(ton_api::fer_simple &to, JsonObject &from);
Status from_json(ton_api::id_config_local &to, JsonObject &from);
Status from_json(ton_api::liteServer_accountId &to, JsonObject &from);
Status from_json(ton_api::liteServer_accountState &to, JsonObject &from);
Status from_json(ton_api::liteServer_blockData &to, JsonObject &from);
Status from_json(ton_api::liteServer_blockState &to, JsonObject &from);
Status from_json(ton_api::liteServer_currentTime &to, JsonObject &from);
Status from_json(ton_api::liteServer_error &to, JsonObject &from);
Status from_json(ton_api::liteServer_masterchainInfo &to, JsonObject &from);
Status from_json(ton_api::liteServer_sendMsgStatus &to, JsonObject &from);
Status from_json(ton_api::liteServer_debug_verbosity &to, JsonObject &from);
Status from_json(ton_api::liteclient_config_global &to, JsonObject &from);
Status from_json(ton_api::liteserver_config_local &to, JsonObject &from);
Status from_json(ton_api::overlay_fer_received &to, JsonObject &from);
Status from_json(ton_api::overlay_fer_completed &to, JsonObject &from);
Status from_json(ton_api::overlay_unicast &to, JsonObject &from);
Status from_json(ton_api::overlay_broadcast &to, JsonObject &from);
Status from_json(ton_api::overlay_broadcastFer &to, JsonObject &from);
Status from_json(ton_api::overlay_broadcastFerShort &to, JsonObject &from);
Status from_json(ton_api::overlay_broadcastNotFound &to, JsonObject &from);
Status from_json(ton_api::overlay_broadcastList &to, JsonObject &from);
Status from_json(ton_api::overlay_message &to, JsonObject &from);
Status from_json(ton_api::overlay_node &to, JsonObject &from);
Status from_json(ton_api::overlay_nodes &to, JsonObject &from);
Status from_json(ton_api::overlay_broadcastFer_id &to, JsonObject &from);
Status from_json(ton_api::overlay_config_local &to, JsonObject &from);
Status from_json(ton_api::overlay_config_random_local &to, JsonObject &from);
Status from_json(ton_api::rldp_message &to, JsonObject &from);
Status from_json(ton_api::rldp_query &to, JsonObject &from);
Status from_json(ton_api::rldp_answer &to, JsonObject &from);
Status from_json(ton_api::rldp_messagePart &to, JsonObject &from);
Status from_json(ton_api::rldp_confirm &to, JsonObject &from);
Status from_json(ton_api::rldp_complete &to, JsonObject &from);
Status from_json(ton_api::tcp_pong &to, JsonObject &from);
Status from_json(ton_api::test0_proof &to, JsonObject &from);
Status from_json(ton_api::test0_proofLink &to, JsonObject &from);
Status from_json(ton_api::test0_shardchain_block &to, JsonObject &from);
Status from_json(ton_api::test0_shardchain_state &to, JsonObject &from);
Status from_json(ton_api::test_validatorSession_block &to, JsonObject &from);
Status from_json(ton_api::test0_blockSignatures &to, JsonObject &from);
Status from_json(ton_api::test0_extMessage &to, JsonObject &from);
Status from_json(ton_api::test0_masterchainBlockExtra_empty &to, JsonObject &from);
Status from_json(ton_api::test0_masterchainBlockExtra_extra &to, JsonObject &from);
Status from_json(ton_api::test0_masterchainStateExtra_empty &to, JsonObject &from);
Status from_json(ton_api::test0_masterchainStateExtra_extra &to, JsonObject &from);
Status from_json(ton_api::test0_topShardBlockDescription &to, JsonObject &from);
Status from_json(ton_api::test0_validatorSessionId &to, JsonObject &from);
Status from_json(ton_api::test0_validatorSet &to, JsonObject &from);
Status from_json(ton_api::test0_validatorSetItem &to, JsonObject &from);
Status from_json(ton_api::test0_masterchain_shardInfo &to, JsonObject &from);
Status from_json(ton_api::ton_blockId &to, JsonObject &from);
Status from_json(ton_api::tonNode_blockDescriptionEmpty &to, JsonObject &from);
Status from_json(ton_api::tonNode_blockDescription &to, JsonObject &from);
Status from_json(ton_api::tonNode_blockIdExt &to, JsonObject &from);
Status from_json(ton_api::tonNode_blockSignature &to, JsonObject &from);
Status from_json(ton_api::tonNode_blockBroadcast &to, JsonObject &from);
Status from_json(ton_api::tonNode_ihrMessageBroadcast &to, JsonObject &from);
Status from_json(ton_api::tonNode_externalMessageBroadcast &to, JsonObject &from);
Status from_json(ton_api::tonNode_newShardBlockBroadcast &to, JsonObject &from);
Status from_json(ton_api::tonNode_data &to, JsonObject &from);
Status from_json(ton_api::tonNode_externalMessage &to, JsonObject &from);
Status from_json(ton_api::tonNode_ihrMessage &to, JsonObject &from);
Status from_json(ton_api::tonNode_newShardBlock &to, JsonObject &from);
Status from_json(ton_api::tonNode_prepared &to, JsonObject &from);
Status from_json(ton_api::tonNode_notFound &to, JsonObject &from);
Status from_json(ton_api::tonNode_preparedProofEmpty &to, JsonObject &from);
Status from_json(ton_api::tonNode_preparedProof &to, JsonObject &from);
Status from_json(ton_api::tonNode_preparedProofLink &to, JsonObject &from);
Status from_json(ton_api::tonNode_preparedState &to, JsonObject &from);
Status from_json(ton_api::tonNode_notFoundState &to, JsonObject &from);
Status from_json(ton_api::tonNode_sessionId &to, JsonObject &from);
Status from_json(ton_api::tonNode_shardPublicOverlayId &to, JsonObject &from);
Status from_json(ton_api::tonNode_zeroStateIdExt &to, JsonObject &from);
Status from_json(ton_api::validator_config_global &to, JsonObject &from);
Status from_json(ton_api::validator_config_local &to, JsonObject &from);
Status from_json(ton_api::validatorSession_blockUpdate &to, JsonObject &from);
Status from_json(ton_api::validatorSession_candidate &to, JsonObject &from);
Status from_json(ton_api::validatorSession_candidateId &to, JsonObject &from);
Status from_json(ton_api::validatorSession_id &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_startSession &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_finishSession &to, JsonObject &from);
Status from_json(ton_api::validatorSession_pong &to, JsonObject &from);
Status from_json(ton_api::validatorSession_round_id &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_submittedBlock &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_approvedBlock &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_commit &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_vote &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_precommit &to, JsonObject &from);
Status from_json(ton_api::validatorSession_message_empty &to, JsonObject &from);
Status from_json(ton_api::validatorSession_candidate_id &to, JsonObject &from);
Status from_json(ton_api::catchain_getBlock &to, JsonObject &from);
Status from_json(ton_api::catchain_getBlockHistory &to, JsonObject &from);
Status from_json(ton_api::catchain_getBlocks &to, JsonObject &from);
Status from_json(ton_api::catchain_getDifference &to, JsonObject &from);
Status from_json(ton_api::dht_findNode &to, JsonObject &from);
Status from_json(ton_api::dht_findValue &to, JsonObject &from);
Status from_json(ton_api::dht_getSignedAddressList &to, JsonObject &from);
Status from_json(ton_api::dht_ping &to, JsonObject &from);
Status from_json(ton_api::dht_query &to, JsonObject &from);
Status from_json(ton_api::dht_store &to, JsonObject &from);
Status from_json(ton_api::getTestObject &to, JsonObject &from);
Status from_json(ton_api::liteServer_debug_setVerbosity &to, JsonObject &from);
Status from_json(ton_api::liteServer_getAccountState &to, JsonObject &from);
Status from_json(ton_api::liteServer_getBlock &to, JsonObject &from);
Status from_json(ton_api::liteServer_getMasterchainInfo &to, JsonObject &from);
Status from_json(ton_api::liteServer_getState &to, JsonObject &from);
Status from_json(ton_api::liteServer_getTime &to, JsonObject &from);
Status from_json(ton_api::liteServer_query &to, JsonObject &from);
Status from_json(ton_api::liteServer_sendMessage &to, JsonObject &from);
Status from_json(ton_api::overlay_getBroadcast &to, JsonObject &from);
Status from_json(ton_api::overlay_getBroadcastList &to, JsonObject &from);
Status from_json(ton_api::overlay_getRandomPeers &to, JsonObject &from);
Status from_json(ton_api::overlay_query &to, JsonObject &from);
Status from_json(ton_api::tcp_ping &to, JsonObject &from);
Status from_json(ton_api::tonNode_downloadBlock &to, JsonObject &from);
Status from_json(ton_api::tonNode_downloadBlockProof &to, JsonObject &from);
Status from_json(ton_api::tonNode_downloadBlockProofLink &to, JsonObject &from);
Status from_json(ton_api::tonNode_downloadState &to, JsonObject &from);
Status from_json(ton_api::tonNode_getNextBlockDescription &to, JsonObject &from);
Status from_json(ton_api::tonNode_prepareBlock &to, JsonObject &from);
Status from_json(ton_api::tonNode_prepareBlockProof &to, JsonObject &from);
Status from_json(ton_api::tonNode_prepareState &to, JsonObject &from);
Status from_json(ton_api::validatorSession_downloadCandidate &to, JsonObject &from);
Status from_json(ton_api::validatorSession_ping &to, JsonObject &from);
void to_json(JsonValueScope &jv, const ton_api::Hashable &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_bool &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_int32 &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_int64 &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_int256 &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_bytes &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_pair &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_vector &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_validatorSessionOldRound &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_validatorSessionRoundAttempt &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_validatorSessionRound &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_blockSignature &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_sentBlock &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_sentBlockEmpty &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_vote &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_blockCandidate &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_blockCandidateAttempt &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_cntVector &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_cntSortedVector &object);
void to_json(JsonValueScope &jv, const ton_api::hashable_validatorSession &object);
void to_json(JsonValueScope &jv, const ton_api::TestObject &object);
void to_json(JsonValueScope &jv, const ton_api::testObject &object);
void to_json(JsonValueScope &jv, const ton_api::testString &object);
void to_json(JsonValueScope &jv, const ton_api::testInt &object);
void to_json(JsonValueScope &jv, const ton_api::testVectorBytes &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_Address &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_address_udp &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_address_udp6 &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_address_tcp &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_address_tcp6 &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_address_tunnel &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_addressList &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_Message &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_packet &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_createChannel &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_confirmChannel &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_custom &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_nop &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_reinit &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_query &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_message_answer &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_node &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_nodes &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_packetContents &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_PacketHeader &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_packetHeader_secp256k1 &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_packetHeader_unenc &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_packetHeader_channel &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_config_global &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_fileTransfer_Message &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_fileTransfer_request &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_fileTransfer_ack &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_fileTransfer_finish &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_fileTransfer_data &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_Full &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_ed25519 &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_aes &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_unenc &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_overlay &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_Pk &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_pk_unenc &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_pk_ed25519 &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_pk_aes &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_pk_overlay &object);
void to_json(JsonValueScope &jv, const ton_api::adnl_id_short &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_BlockResult &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_blockNotFound &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_blockResult &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_blocks &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_Difference &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_difference &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_differenceFork &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_firstblock &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_sent &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_blockUpdate &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_data &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_dep &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_id &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_inner_Data &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_data_badBlock &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_data_fork &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_data_nop &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_block_data_vector &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_config_global &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::config_global &object);
void to_json(JsonValueScope &jv, const ton_api::config_local &object);
void to_json(JsonValueScope &jv, const ton_api::dht_key &object);
void to_json(JsonValueScope &jv, const ton_api::dht_keyDescription &object);
void to_json(JsonValueScope &jv, const ton_api::dht_message &object);
void to_json(JsonValueScope &jv, const ton_api::dht_node &object);
void to_json(JsonValueScope &jv, const ton_api::dht_nodes &object);
void to_json(JsonValueScope &jv, const ton_api::dht_pong &object);
void to_json(JsonValueScope &jv, const ton_api::dht_stored &object);
void to_json(JsonValueScope &jv, const ton_api::dht_UpdateRule &object);
void to_json(JsonValueScope &jv, const ton_api::dht_updateRule_signature &object);
void to_json(JsonValueScope &jv, const ton_api::dht_updateRule_anybody &object);
void to_json(JsonValueScope &jv, const ton_api::dht_updateRule_nodes &object);
void to_json(JsonValueScope &jv, const ton_api::dht_updateRule_overlayNodes &object);
void to_json(JsonValueScope &jv, const ton_api::dht_value &object);
void to_json(JsonValueScope &jv, const ton_api::dht_ValueResult &object);
void to_json(JsonValueScope &jv, const ton_api::dht_valueNotFound &object);
void to_json(JsonValueScope &jv, const ton_api::dht_valueFound &object);
void to_json(JsonValueScope &jv, const ton_api::dht_config_global &object);
void to_json(JsonValueScope &jv, const ton_api::dht_config_Local &object);
void to_json(JsonValueScope &jv, const ton_api::dht_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::dht_config_random_local &object);
void to_json(JsonValueScope &jv, const ton_api::dummydb_block &object);
void to_json(JsonValueScope &jv, const ton_api::dummydb_gcValidatorSessionList &object);
void to_json(JsonValueScope &jv, const ton_api::dummyworkchain0_config_global &object);
void to_json(JsonValueScope &jv, const ton_api::dummyworkchain0_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::fer_Type &object);
void to_json(JsonValueScope &jv, const ton_api::fer_raptorQ &object);
void to_json(JsonValueScope &jv, const ton_api::fer_simple &object);
void to_json(JsonValueScope &jv, const ton_api::id_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_accountId &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_accountState &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_blockData &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_blockState &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_currentTime &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_error &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_masterchainInfo &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_sendMsgStatus &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_debug_verbosity &object);
void to_json(JsonValueScope &jv, const ton_api::liteclient_config_global &object);
void to_json(JsonValueScope &jv, const ton_api::liteserver_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_Broadcast &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_fer_received &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_fer_completed &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_unicast &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_broadcast &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_broadcastFer &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_broadcastFerShort &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_broadcastNotFound &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_broadcastList &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_message &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_node &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_nodes &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_broadcastFer_id &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_config_Local &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_config_random_local &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_Message &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_message &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_query &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_answer &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_MessagePart &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_messagePart &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_confirm &object);
void to_json(JsonValueScope &jv, const ton_api::rldp_complete &object);
void to_json(JsonValueScope &jv, const ton_api::tcp_pong &object);
void to_json(JsonValueScope &jv, const ton_api::test0_proof &object);
void to_json(JsonValueScope &jv, const ton_api::test0_proofLink &object);
void to_json(JsonValueScope &jv, const ton_api::test0_shardchain_block &object);
void to_json(JsonValueScope &jv, const ton_api::test0_shardchain_state &object);
void to_json(JsonValueScope &jv, const ton_api::test_validatorSession_block &object);
void to_json(JsonValueScope &jv, const ton_api::test0_blockSignatures &object);
void to_json(JsonValueScope &jv, const ton_api::test0_extMessage &object);
void to_json(JsonValueScope &jv, const ton_api::test0_MasterchainBlockExtra &object);
void to_json(JsonValueScope &jv, const ton_api::test0_masterchainBlockExtra_empty &object);
void to_json(JsonValueScope &jv, const ton_api::test0_masterchainBlockExtra_extra &object);
void to_json(JsonValueScope &jv, const ton_api::test0_MasterchainStateExtra &object);
void to_json(JsonValueScope &jv, const ton_api::test0_masterchainStateExtra_empty &object);
void to_json(JsonValueScope &jv, const ton_api::test0_masterchainStateExtra_extra &object);
void to_json(JsonValueScope &jv, const ton_api::test0_topShardBlockDescription &object);
void to_json(JsonValueScope &jv, const ton_api::test0_validatorSessionId &object);
void to_json(JsonValueScope &jv, const ton_api::test0_validatorSet &object);
void to_json(JsonValueScope &jv, const ton_api::test0_validatorSetItem &object);
void to_json(JsonValueScope &jv, const ton_api::test0_masterchain_shardInfo &object);
void to_json(JsonValueScope &jv, const ton_api::ton_blockId &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_BlockDescription &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_blockDescriptionEmpty &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_blockDescription &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_blockIdExt &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_blockSignature &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_Broadcast &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_blockBroadcast &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_ihrMessageBroadcast &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_externalMessageBroadcast &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_newShardBlockBroadcast &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_data &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_externalMessage &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_ihrMessage &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_newShardBlock &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_Prepared &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_prepared &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_notFound &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_PreparedProof &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_preparedProofEmpty &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_preparedProof &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_preparedProofLink &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_PreparedState &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_preparedState &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_notFoundState &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_sessionId &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_shardPublicOverlayId &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_zeroStateIdExt &object);
void to_json(JsonValueScope &jv, const ton_api::validator_config_global &object);
void to_json(JsonValueScope &jv, const ton_api::validator_config_local &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_blockUpdate &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_candidate &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_candidateId &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_id &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_Message &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_startSession &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_finishSession &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_pong &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_round_id &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_round_Message &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_submittedBlock &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_approvedBlock &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_commit &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_vote &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_precommit &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_message_empty &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_candidate_id &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_getBlock &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_getBlockHistory &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_getBlocks &object);
void to_json(JsonValueScope &jv, const ton_api::catchain_getDifference &object);
void to_json(JsonValueScope &jv, const ton_api::dht_findNode &object);
void to_json(JsonValueScope &jv, const ton_api::dht_findValue &object);
void to_json(JsonValueScope &jv, const ton_api::dht_getSignedAddressList &object);
void to_json(JsonValueScope &jv, const ton_api::dht_ping &object);
void to_json(JsonValueScope &jv, const ton_api::dht_query &object);
void to_json(JsonValueScope &jv, const ton_api::dht_store &object);
void to_json(JsonValueScope &jv, const ton_api::getTestObject &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_debug_setVerbosity &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_getAccountState &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_getBlock &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_getMasterchainInfo &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_getState &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_getTime &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_query &object);
void to_json(JsonValueScope &jv, const ton_api::liteServer_sendMessage &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_getBroadcast &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_getBroadcastList &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_getRandomPeers &object);
void to_json(JsonValueScope &jv, const ton_api::overlay_query &object);
void to_json(JsonValueScope &jv, const ton_api::tcp_ping &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_downloadBlock &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_downloadBlockProof &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_downloadBlockProofLink &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_downloadState &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_getNextBlockDescription &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_prepareBlock &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_prepareBlockProof &object);
void to_json(JsonValueScope &jv, const ton_api::tonNode_prepareState &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_downloadCandidate &object);
void to_json(JsonValueScope &jv, const ton_api::validatorSession_ping &object);
}  // namespace ton_api
}  // namespace ton
